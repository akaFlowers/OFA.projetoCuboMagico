@model projetoCuboMagico.Models.Cliente

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    /*
<div class="form-horizontal">
    <h4>Cliente</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TamCamiseta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TamCamiseta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TamCamiseta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pais, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Usuario.Usuarioo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Usuario.Usuarioo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Usuario.Usuarioo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Usuario.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Usuario.Senha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Usuario.Senha, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Usuario.NivelAcesso, htmlAttributes: new { @class = "control-label col-md-2" })
        @{
            List<SelectListItem> items = new List<SelectListItem>();
            items.Add(new SelectListItem
            {
                Text = "Cliente",
                Value = "Cliente",
                Selected = true
            });
            items.Add(new SelectListItem
            {
                Text = "Funcionário",
                Value = "Funcionário",

            });
            items.Add(new SelectListItem
            {
                Text = "Administrador",
                Value = "Administrador"
            });
        }
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Usuario.NivelAcesso, items, new { @class = "form-control", })
            @Html.ValidationMessageFor(model => model.Usuario.NivelAcesso, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
*/

<div id="cadastro">
    <div id="barra_ind1"></div> <div id="barra_ind2"></div>
    <div id="circulo_ind1" class="ind_ativo"> <img class="ind" src="_imagens/cadastro_vetor.png" /> </div>
    <div id="circulo_ind2"> <img class="ind" src="_imagens/livro_vetor.png" /> </div>
    <div id="circulo_ind3"> <img class="ind" src="_imagens/cartao_vetor.png" /> </div>
    <div id="circulo_ind4"> <img class="ind" src="_imagens/finish_vetor.png" /> </div>

    <div id="livro">
        <div id="livro_left">
            <form>
                <h2>Insira seus dados:</h2><br /><br />
                <div class="form-group">

                </div>
                @Html.LabelFor(model => model.Nome)
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "")

                @Html.LabelFor(model => model.Sobrenome)
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "")

                @Html.LabelFor(model => model.DataNascimento)
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "")

                @Html.LabelFor(model => model.Cpf)
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cpf, "")

                @Html.LabelFor(model => model.Sexo)
                @{
                    List<SelectListItem> sexo = new List<SelectListItem>();
                    sexo.Add(new SelectListItem
                    {
                        Text = "M",
                        Value = "Masculino",
                        Selected = true
                    });
                    sexo.Add(new SelectListItem
                    {
                        Text = "F",
                        Value = "Feminino",

                    });
                }
                @Html.DropDownListFor(model => model.Sexo, sexo, new { @class = "form-control", })
                @Html.ValidationMessageFor(model => model.Sexo, "")

                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "")

            </form>
        </div>

        <div id="livro_right">
            <form>
                @Html.LabelFor(model => model.Telefone)
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "")

                @Html.LabelFor(model => model.Celular)
                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Celular, "")

                @Html.LabelFor(model => model.Cep)
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cep, "")

                @Html.LabelFor(model => model.Pais)
                @{
                    List<SelectListItem> pais = new List<SelectListItem>();
                    pais.Add(new SelectListItem
                    {
                        Text = "Brasil",
                        Value = "Brasil",
                        Selected = true,
                        Disabled = true
                    });

                }
                @Html.DropDownListFor(model => model.Pais, pais, new { @class = "form-control", })
                @Html.ValidationMessageFor(model => model.Pais, "")

                @Html.LabelFor(model => model.Estado)
                @{
                    List<SelectListItem> estado = new List<SelectListItem>();
                    estado.Add(new SelectListItem
                    {
                        Text = "AC",
                        Value = "AC"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "AL",
                        Value = "AL"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "AP",
                        Value = "AP"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "AM",
                        Value = "AM"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "BA",
                        Value = "BA"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "CE",
                        Value = "CE"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "DF",
                        Value = "DF"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "ES",
                        Value = "ES"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "GO",
                        Value = "GO"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "MA",
                        Value = "MA"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "MT",
                        Value = "MT"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "MS",
                        Value = "MS"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "MG",
                        Value = "MG"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "PA",
                        Value = "PA"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "PB",
                        Value = "PB"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "PR",
                        Value = "PR"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "PE",
                        Value = "PE"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "PI",
                        Value = "PI"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "RJ",
                        Value = "RJ"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "RN",
                        Value = "RN"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "RS",
                        Value = "RS"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "RO",
                        Value = "RO"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "RR",
                        Value = "RR"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "SC",
                        Value = "SC"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "SP",
                        Value = "SP",
                        Selected = true
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "SE",
                        Value = "SE"
                    });
                    estado.Add(new SelectListItem
                    {
                        Text = "TO",
                        Value = "TO"
                    });
                }
                @Html.DropDownListFor(model => model.Estado, estado, new { @class = "form-control", })
                @Html.ValidationMessageFor(model => model.Estado, "")
            </form>
        </div>
        <div id="livro_centro"></div>
    </div>

</div>


                    }

